{"ast":null,"code":"import _toConsumableArray from \"/Users/assafs/Desktop/snake-redux/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/assafs/Desktop/snake-redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { BOARD_WIDTH, BOARD_HEIGHT, INITIAL_DIRECTION } from \"../constants\";\nvar INITIAL_STATE = {\n  direction: INITIAL_DIRECTION,\n  coords: [[Math.floor(BOARD_WIDTH / 2), 0], [Math.floor(BOARD_WIDTH / 2), 1], [Math.floor(BOARD_WIDTH / 2), 2]]\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"MOVE_SNAKE\":\n      return _objectSpread({}, state, {\n        coords: action.coords\n      });\n\n    case \"SET_DIRECTION\":\n      return _objectSpread({}, state, {\n        direction: action.direction\n      });\n\n    case \"PREPEND_SNAKE\":\n      return _objectSpread({}, state, {\n        coords: [[action.coords]].concat(_toConsumableArray(state.coords))\n      });\n\n    case \"NEW_GAME\":\n      return INITIAL_STATE;\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/Users/assafs/Desktop/snake-redux/src/reducers/snake-reducer.js"],"names":["BOARD_WIDTH","BOARD_HEIGHT","INITIAL_DIRECTION","INITIAL_STATE","direction","coords","Math","floor","state","action","type"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,iBAApC,QAA6D,cAA7D;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAEF,iBADS;AAEpBG,EAAAA,MAAM,EAAE,CACN,CAACC,IAAI,CAACC,KAAL,CAAWP,WAAW,GAAG,CAAzB,CAAD,EAA8B,CAA9B,CADM,EAEN,CAACM,IAAI,CAACC,KAAL,CAAWP,WAAW,GAAG,CAAzB,CAAD,EAA8B,CAA9B,CAFM,EAGN,CAACM,IAAI,CAACC,KAAL,CAAWP,WAAW,GAAG,CAAzB,CAAD,EAA8B,CAA9B,CAHM;AAFY,CAAtB;AASA,eAAe,YAAwC;AAAA,MAA/BQ,KAA+B,uEAAvBL,aAAuB;AAAA,MAARM,MAAQ;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,+BACKF,KADL;AAEEH,QAAAA,MAAM,EAAEI,MAAM,CAACJ;AAFjB;;AAKF,SAAK,eAAL;AACE,+BACKG,KADL;AAEEJ,QAAAA,SAAS,EAAEK,MAAM,CAACL;AAFpB;;AAKF,SAAK,eAAL;AACE,+BACKI,KADL;AAEEH,QAAAA,MAAM,GAAG,CAACI,MAAM,CAACJ,MAAR,CAAH,4BAAuBG,KAAK,CAACH,MAA7B;AAFR;;AAKF,SAAK,UAAL;AACE,aAAOF,aAAP;AApBJ;;AAuBA,SAAOK,KAAP;AACD","sourcesContent":["import { BOARD_WIDTH, BOARD_HEIGHT, INITIAL_DIRECTION } from \"../constants\";\n\nconst INITIAL_STATE = {\n  direction: INITIAL_DIRECTION,\n  coords: [\n    [Math.floor(BOARD_WIDTH / 2), 0],\n    [Math.floor(BOARD_WIDTH / 2), 1],\n    [Math.floor(BOARD_WIDTH / 2), 2]\n  ]\n};\n\nexport default function(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case \"MOVE_SNAKE\":\n      return {\n        ...state,\n        coords: action.coords\n      };\n\n    case \"SET_DIRECTION\":\n      return {\n        ...state,\n        direction: action.direction\n      };\n\n    case \"PREPEND_SNAKE\":\n      return {\n        ...state,\n        coords: [[action.coords], ...state.coords]\n      };\n\n    case \"NEW_GAME\":\n      return INITIAL_STATE;\n  }\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}