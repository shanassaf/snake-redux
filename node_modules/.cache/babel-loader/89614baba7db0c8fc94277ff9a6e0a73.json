{"ast":null,"code":"export function moveSnake(snake) {\n  var direction = snake.direction;\n  var coords = snake.coords.slice();\n  var headCoords = coords[coords.length - 1];\n  var headMap = {\n    DOWN: [headCoords[0], headCoords[1] + 1],\n    UP: [headCoords[0], headCoords[1] - 1],\n    LEFT: [headCoords[0] - 1, headCoords[1]],\n    RIGHT: [headCoords[0] + 1, headCoords[1]]\n  };\n  coords.push(headMap[direction]);\n  coords.shift();\n  return {\n    type: \"MOVE_SNAKE\",\n    coords: coords\n  };\n}\nexport function setFood(coords) {\n  return {\n    type: \"SET_FOOD\",\n    food: coords\n  };\n}\nexport function setDirection(direction) {\n  return {\n    type: \"SET_DIRECTION\",\n    direction: direction\n  };\n}\nexport function prependSnake(coords) {\n  return {\n    type: \"PREPEND_SNAKE\",\n    coords: coords\n  };\n}\nexport function newGame() {\n  return {\n    type: \"NEW_GAME\"\n  };\n}\nexport function loseGame() {\n  return {\n    type: \"LOSE_GAME\"\n  };\n}\nexport function incrementScore() {\n  return {\n    type: \"INCREMENT_SCORE\"\n  };\n}","map":{"version":3,"sources":["/Users/assafs/Desktop/snake-redux/src/actions/index.js"],"names":["moveSnake","snake","direction","coords","slice","headCoords","length","headMap","DOWN","UP","LEFT","RIGHT","push","shift","type","setFood","food","setDirection","prependSnake","newGame","loseGame","incrementScore"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,MAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB;AACA,MAAIC,MAAM,GAAGF,KAAK,CAACE,MAAN,CAAaC,KAAb,EAAb;AACA,MAAMC,UAAU,GAAGF,MAAM,CAACA,MAAM,CAACG,MAAP,GAAgB,CAAjB,CAAzB;AACA,MAAMC,OAAO,GAAG;AACdC,IAAAA,IAAI,EAAE,CAACH,UAAU,CAAC,CAAD,CAAX,EAAgBA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhC,CADQ;AAEdI,IAAAA,EAAE,EAAE,CAACJ,UAAU,CAAC,CAAD,CAAX,EAAgBA,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAhC,CAFU;AAGdK,IAAAA,IAAI,EAAE,CAACL,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAjB,EAAoBA,UAAU,CAAC,CAAD,CAA9B,CAHQ;AAIdM,IAAAA,KAAK,EAAE,CAACN,UAAU,CAAC,CAAD,CAAV,GAAgB,CAAjB,EAAoBA,UAAU,CAAC,CAAD,CAA9B;AAJO,GAAhB;AAMAF,EAAAA,MAAM,CAACS,IAAP,CAAYL,OAAO,CAACL,SAAD,CAAnB;AACAC,EAAAA,MAAM,CAACU,KAAP;AAEA,SAAO;AACLC,IAAAA,IAAI,EAAE,YADD;AAELX,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID;AAED,OAAO,SAASY,OAAT,CAAiBZ,MAAjB,EAAyB;AAC9B,SAAO;AACLW,IAAAA,IAAI,EAAE,UADD;AAELE,IAAAA,IAAI,EAAEb;AAFD,GAAP;AAID;AAED,OAAO,SAASc,YAAT,CAAsBf,SAAtB,EAAiC;AACtC,SAAO;AACLY,IAAAA,IAAI,EAAE,eADD;AAELZ,IAAAA,SAAS,EAATA;AAFK,GAAP;AAID;AAED,OAAO,SAASgB,YAAT,CAAsBf,MAAtB,EAA8B;AACnC,SAAO;AACLW,IAAAA,IAAI,EAAE,eADD;AAELX,IAAAA,MAAM,EAAEA;AAFH,GAAP;AAID;AAED,OAAO,SAASgB,OAAT,GAAmB;AACxB,SAAO;AACLL,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD;AAED,OAAO,SAASM,QAAT,GAAoB;AACzB,SAAO;AACLN,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD;AAED,OAAO,SAASO,cAAT,GAA0B;AAC/B,SAAO;AACLP,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD","sourcesContent":["export function moveSnake(snake) {\n  const direction = snake.direction;\n  let coords = snake.coords.slice();\n  const headCoords = coords[coords.length - 1];\n  const headMap = {\n    DOWN: [headCoords[0], headCoords[1] + 1],\n    UP: [headCoords[0], headCoords[1] - 1],\n    LEFT: [headCoords[0] - 1, headCoords[1]],\n    RIGHT: [headCoords[0] + 1, headCoords[1]]\n  };\n  coords.push(headMap[direction]);\n  coords.shift();\n\n  return {\n    type: \"MOVE_SNAKE\",\n    coords\n  };\n}\n\nexport function setFood(coords) {\n  return {\n    type: \"SET_FOOD\",\n    food: coords\n  };\n}\n\nexport function setDirection(direction) {\n  return {\n    type: \"SET_DIRECTION\",\n    direction\n  };\n}\n\nexport function prependSnake(coords) {\n  return {\n    type: \"PREPEND_SNAKE\",\n    coords: coords\n  };\n}\n\nexport function newGame() {\n  return {\n    type: \"NEW_GAME\"\n  };\n}\n\nexport function loseGame() {\n  return {\n    type: \"LOSE_GAME\"\n  };\n}\n\nexport function incrementScore() {\n  return {\n    type: \"INCREMENT_SCORE\"\n  };\n}\n"]},"metadata":{},"sourceType":"module"}