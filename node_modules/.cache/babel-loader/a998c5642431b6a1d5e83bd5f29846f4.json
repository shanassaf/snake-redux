{"ast":null,"code":"import _objectSpread from \"/Users/assafs/Desktop/snake-redux/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar INITIAL_STATE = {\n  lost: false,\n  score: 5,\n  highScore: 0\n};\n\nfunction updateHighScore(_ref) {\n  var score = _ref.score,\n      highScore = _ref.highScore;\n  return score > highScore ? score : highScore;\n}\n\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"LOSE_GAME\":\n      return _objectSpread({}, state, {\n        lost: true,\n        highScore: updateHighScore(state)\n      });\n\n    case \"NEW_GAME\":\n      return _objectSpread({}, state, {\n        score: 0,\n        lost: false\n      });\n\n    case \"INCREMENT_SCORE\":\n      return _objectSpread({}, state, {\n        score: state.score + 1\n      });\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/Users/assafs/Desktop/snake-redux/src/reducers/game-reducer.js"],"names":["INITIAL_STATE","lost","score","highScore","updateHighScore","state","action","type"],"mappings":";AAAA,IAAMA,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,KADc;AAEpBC,EAAAA,KAAK,EAAE,CAFa;AAGpBC,EAAAA,SAAS,EAAE;AAHS,CAAtB;;AAMA,SAASC,eAAT,OAA+C;AAAA,MAApBF,KAAoB,QAApBA,KAAoB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AAC7C,SAAOD,KAAK,GAAGC,SAAR,GAAoBD,KAApB,GAA4BC,SAAnC;AACD;;AAED,eAAe,YAAwC;AAAA,MAA/BE,KAA+B,uEAAvBL,aAAuB;AAAA,MAARM,MAAQ;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,+BACKF,KADL;AAEEJ,QAAAA,IAAI,EAAE,IAFR;AAGEE,QAAAA,SAAS,EAAEC,eAAe,CAACC,KAAD;AAH5B;;AAKF,SAAK,UAAL;AACE,+BACKA,KADL;AAEEH,QAAAA,KAAK,EAAE,CAFT;AAGED,QAAAA,IAAI,EAAE;AAHR;;AAKF,SAAK,iBAAL;AACE,+BACKI,KADL;AAEEH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAc;AAFvB;AAdJ;;AAoBA,SAAOG,KAAP;AACD","sourcesContent":["const INITIAL_STATE = {\n  lost: false,\n  score: 5,\n  highScore: 0\n};\n\nfunction updateHighScore({ score, highScore }) {\n  return score > highScore ? score : highScore;\n}\n\nexport default function(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case \"LOSE_GAME\":\n      return {\n        ...state,\n        lost: true,\n        highScore: updateHighScore(state)\n      };\n    case \"NEW_GAME\":\n      return {\n        ...state,\n        score: 0,\n        lost: false\n      };\n    case \"INCREMENT_SCORE\":\n      return {\n        ...state,\n        score: state.score + 1\n      };\n  }\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}